name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  gradle-validation:
    name: Validate Gradle Wrapper
    runs-on: ubuntu-latest
    steps:
      - name: Fetch sources
        uses: actions/checkout@v2.4.0

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1.0.4
  
  thundra:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Thundra Gradle Test Instrumentation
        uses: thundra-io/thundra-gradle-test-action@v1.0.4
        with:
          apikey: ${{ secrets.THUNDRA_API_KEY }}
          project_id: ${{ secrets.THUNDRA_PROJECT_ID }}
          command: ./gradlew build

  build:
    name: Build app
    runs-on: ubuntu-latest
    needs:
      - gradle-validation

    steps:
      - name: Fetch sources
        uses: actions/checkout@v2.4.0

      - name: Setup Gradle dependencies cache
        uses: actions/cache@v3.0.1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-caches-

      - name: Setup Gradle Wrapper cache
        uses: actions/cache@v3.0.1
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-wrapper-

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build with Gradle
        run: ./gradlew build --exclude-task test

      - name: Upload artifact
        uses: actions/upload-artifact@v2.3.1
        with:
          name: package
          path: build/libs
          if-no-files-found: error

  unit-test:
    name: Execute unit tests
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
      - name: Fetch sources
        uses: actions/checkout@v2.4.0

      - name: Setup Gradle dependencies cache
        uses: actions/cache@v3.0.1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-caches-

      - name: Setup Gradle Wrapper cache
        uses: actions/cache@v3.0.1
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-wrapper-

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Test
        run: ./gradlew test --tests com.example.realworld.unit.* -Djunit.jupiter.execution.parallel.enabled=true

      - name: Prepare artifacts
        run: |
          mkdir -p build/reports/jacoco/test/unit-test
          mv build/reports/jacoco/test/html build/reports/jacoco/test/jacocoTestReport.xml build/reports/jacoco/test/unit-test

      - name: Upload coverage report
        uses: actions/upload-artifact@v2.3.1
        with:
          name: unit-test-coverage-report
          path: build/reports/jacoco/test/unit-test
          if-no-files-found: error

  integration-test:
    name: Execute integration tests
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
      - name: Fetch sources
        uses: actions/checkout@v2.4.0

      - name: Setup Gradle dependencies cache
        uses: actions/cache@v3.0.1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-caches-

      - name: Setup Gradle Wrapper cache
        uses: actions/cache@v3.0.1
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-wrapper-

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Test
        run: ./gradlew test --tests com.example.realworld.integration.*

      - name: Prepare artifacts
        run: |
          mkdir -p build/reports/jacoco/test/integration-test
          mv build/reports/jacoco/test/html build/reports/jacoco/test/jacocoTestReport.xml build/reports/jacoco/test/integration-test

      - name: Upload coverage report
        uses: actions/upload-artifact@v2.3.1
        with:
          name: integration-test-coverage-report
          path: build/reports/jacoco/test/integration-test
          if-no-files-found: error

  codecov:
    name: Publish code coverage to codecov
    runs-on: ubuntu-latest
    needs:
      - unit-test
      - integration-test

    steps:
      - name: Fetch sources
        uses: actions/checkout@v2.4.0

      - name: Download unit test coverage report
        uses: actions/download-artifact@v2.1.0
        with:
          name: unit-test-coverage-report
          path: build/reports/jacoco/test/unit-test

      - name: Download integration test coverage report
        uses: actions/download-artifact@v2.1.0
        with:
          name: integration-test-coverage-report
          path: build/reports/jacoco/test/integration-test

      - name: Publish code coverage
        uses: codecov/codecov-action@v2.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: build/reports/jacoco/test/unit-test/jacocoTestReport.xml,build/reports/jacoco/test/integration-test/jacocoTestReport.xml
          flags: unittest
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: false

  sonarcloud-scan:
    name: Publish metrics to Sonar Cloud
    runs-on: ubuntu-latest
    needs:
      - unit-test
      - integration-test

    steps:
      - name: Fetch sources
        uses: actions/checkout@v2.4.0

      - name: Setup Gradle dependencies cache
        uses: actions/cache@v3.0.1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-caches-

      - name: Setup Gradle Wrapper cache
        uses: actions/cache@v3.0.1
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-wrapper-

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Download artifact
        uses: actions/download-artifact@v2.1.0
        with:
          name: package
          path: build/libs

      - name: Download unit test coverage report
        uses: actions/download-artifact@v2.1.0
        with:
          name: unit-test-coverage-report
          path: build/reports/jacoco/test/unit-test

      - name: Download integration test coverage report
        uses: actions/download-artifact@v2.1.0
        with:
          name: integration-test-coverage-report
          path: build/reports/jacoco/test/integration-test

      - name: Publish metrics
        uses: sonarsource/sonarcloud-github-action@v1.6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
